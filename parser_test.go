package main

import (
	"bytes"
	"fmt"
	"os"
	"testing"
)

//var msgs = []byte("B9D2C75C534C749469528E230AC00B6E|BC8373AB22891BA2ED29318F5E2A8A9B|2017|12|15|13-47-54|4281|8054383|D1D84635A3282DC2A3F814D1B8C4B69B|4|6|0|||0|65535|1005|2017-12-15 13:43:45|1305175|86027303|460011\nB7A505A8C2B685909B02E31FF992DADE|AA8111C202AEF12E62A0E1FA8217FFB0|2017|12|15|13-47-54|4283|7924867|2953D49F9C003E777C799F475229AB7C|2|6|0|||0|65535|4294967295|2017-12-15 13:43:45|1863232|35590507|460012\n6F2A3D156E91F482B04B9166D49A9554|2D553DB5270A03340E6802988515BFC6|2017|12|15|13-47-54|4132|3368579|C5793B412B61DF0C1F56B09D96120295|5|6|0|||0|65535|1004|2017-12-15 13:43:45|1764768|86468403|460017\n7BF0B2A8BB747BD2D5BC8E15A64203D4|9A38FD513973B689FFD7C82D32FC00F8|2017|12|15|13-47-54|4098|2797423|43B4665180C2D2B4E9665EE41C087FF8|2|6|0|||0|65535|4294967295|2017-12-15 13:43:45|1312683|35917907|460016\n22324CE925FC1DA2BC06BDF807B0A055|F775F016ED4B7F9431FE955DA43275FF|2017|12|15|13-47-54|4152|4580739|051BCC69633838D82733A7683A3DAFE9|2|6|0|||0|65535|4294967295|2017-12-15 13:43:45|1851964|86412903|460019\nBBE3724E7F1B3620BB97E9932728FD0A|0F7B9A518CA3066F9F6CDEACF92B471E|2017|12|15|13-47-54|4112|5223435|913D6B088264562A76959C3C81B46461|2|6|0|||0|65535|4294967295|2017-12-15 13:42:52|1851390|86653403|460013\n")

var msgs = []byte("B9D2C75C534C749469528E230AC00B6E|BC8373AB22891BA2ED29318F5E2A8A9B|2017|12|15|13-47-54|4281|8054383|D1D84635A3282DC2A3F814D1B8C4B69B|4|6|0|||0|65535|1005|2017-12-15 13:43:45|1305175|86027303|460011\n")

func TestParseMsgs(t *testing.T) {
	msg_list := bytes.Split(msgs, []byte("\n"))
	for _, msg := range msg_list {
		fmt.Printf("msg(%s)\n", msg)
	}
	output := make(chan []byte, 1024)
	c := ParseSignalings(msgs, "23G", output)
	fmt.Println(c)

	i := 0
	f, err := os.OpenFile("test_parse.txt", os.O_CREATE|os.O_WRONLY|os.O_APPEND, 0644)
	if err != nil {
		t.Error("Open test_parse.txt failed! error: %s\n", err)
	}
	for event := range output {
		n, err := f.Write(event)
		if err != nil {
			fmt.Println("write error:", err)
		} else {
			fmt.Printf("n bytes:(%d)\n", n)
		}

		//fmt.Printf("msg:(%s)\n", string(event))
		i++
		if i >= c {
			break
		}
	}
	f.Close()
}

func TestParseMsg(t *testing.T) {
	fields, _ := ParseSignaling(msgs)
	fmt.Println(fields)
}
